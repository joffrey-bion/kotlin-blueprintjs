@file:JsModule("@blueprintjs/core")

package blueprintjs.core

// common/classes.d.ts exported as an object named "Classes" from common/index.d.ts
external object Classes {
    val ACTIVE: String = definedExternally
    val ALIGN_LEFT: String = definedExternally
    val ALIGN_RIGHT: String = definedExternally
    val COMPACT: String = definedExternally
    val DARK: String = definedExternally
    val DISABLED: String = definedExternally
    val FILL: String = definedExternally
    val FIXED: String = definedExternally
    val FIXED_TOP: String = definedExternally
    val INLINE: String = definedExternally
    val INTERACTIVE: String = definedExternally
    val LARGE: String = definedExternally
    val LOADING: String = definedExternally
    val MINIMAL: String = definedExternally
    val OUTLINED: String = definedExternally
    val PADDED: String = definedExternally
    val MULTILINE: String = definedExternally
    val READ_ONLY: String = definedExternally
    val ROUND: String = definedExternally
    val SELECTED: String = definedExternally
    val SMALL: String = definedExternally
    val VERTICAL: String = definedExternally
    val POSITION_TOP: String = definedExternally
    val POSITION_BOTTOM: String = definedExternally
    val POSITION_LEFT: String = definedExternally
    val POSITION_RIGHT: String = definedExternally
    val ELEVATION_0: String = definedExternally
    val ELEVATION_1: String = definedExternally
    val ELEVATION_2: String = definedExternally
    val ELEVATION_3: String = definedExternally
    val ELEVATION_4: String = definedExternally
    val INTENT_PRIMARY: String = definedExternally
    val INTENT_SUCCESS: String = definedExternally
    val INTENT_WARNING: String = definedExternally
    val INTENT_DANGER: String = definedExternally
    val FOCUS_DISABLED: String = definedExternally
    val FOCUS_STYLE_MANAGER_IGNORE: String = definedExternally
    val UI_TEXT: String = definedExternally
    val RUNNING_TEXT: String = definedExternally
    val MONOSPACE_TEXT: String = definedExternally
    val TEXT_LARGE: String = definedExternally
    val TEXT_SMALL: String = definedExternally
    val TEXT_MUTED: String = definedExternally
    val TEXT_DISABLED: String = definedExternally
    val TEXT_OVERFLOW_ELLIPSIS: String = definedExternally
    val BLOCKQUOTE: String = definedExternally
    val CODE: String = definedExternally
    val CODE_BLOCK: String = definedExternally
    val HEADING: String = definedExternally
    val LIST: String = definedExternally
    val LIST_UNSTYLED: String = definedExternally
    val RTL: String = definedExternally
    val ALERT: String = definedExternally
    val ALERT_BODY: String = definedExternally
    val ALERT_CONTENTS: String = definedExternally
    val ALERT_FOOTER: String = definedExternally
    val BREADCRUMB: String = definedExternally
    val BREADCRUMB_CURRENT: String = definedExternally
    val BREADCRUMBS: String = definedExternally
    val BREADCRUMBS_COLLAPSED: String = definedExternally
    val BUTTON: String = definedExternally
    val BUTTON_GROUP: String = definedExternally
    val BUTTON_SPINNER: String = definedExternally
    val BUTTON_TEXT: String = definedExternally
    val CALLOUT: String = definedExternally
    val CALLOUT_HAS_BODY_CONTENT: String = definedExternally
    val CALLOUT_ICON: String = definedExternally
    val CARD: String = definedExternally
    val CONTROL_CARD: String = definedExternally
    val CONTROL_CARD_LABEL: String = definedExternally
    val SWITCH_CONTROL_CARD: String = definedExternally
    val CHECKBOX_CONTROL_CARD: String = definedExternally
    val RADIO_CONTROL_CARD: String = definedExternally
    val CARD_LIST: String = definedExternally
    val CARD_LIST_BORDERED: String = definedExternally
    val COLLAPSE: String = definedExternally
    val COLLAPSE_BODY: String = definedExternally
    val CONTEXT_MENU: String = definedExternally
    val CONTEXT_MENU_VIRTUAL_TARGET: String = definedExternally
    val CONTEXT_MENU_POPOVER: String = definedExternally
    val CONTEXT_MENU_BACKDROP: String = definedExternally
    val CONTROL_GROUP: String = definedExternally
    val DIALOG: String = definedExternally
    val DIALOG_CONTAINER: String = definedExternally
    val DIALOG_HEADER: String = definedExternally
    val DIALOG_BODY: String = definedExternally
    val DIALOG_BODY_SCROLL_CONTAINER: String = definedExternally
    val DIALOG_CLOSE_BUTTON: String = definedExternally
    val DIALOG_FOOTER: String = definedExternally
    val DIALOG_FOOTER_FIXED: String = definedExternally
    val DIALOG_FOOTER_MAIN_SECTION: String = definedExternally
    val DIALOG_FOOTER_ACTIONS: String = definedExternally
    val DIALOG_STEP: String = definedExternally
    val DIALOG_STEP_CONTAINER: String = definedExternally
    val DIALOG_STEP_TITLE: String = definedExternally
    val DIALOG_STEP_ICON: String = definedExternally
    val DIALOG_STEP_VIEWED: String = definedExternally
    val DIVIDER: String = definedExternally
    val DRAWER: String = definedExternally
    val DRAWER_BODY: String = definedExternally
    val DRAWER_FOOTER: String = definedExternally
    val DRAWER_HEADER: String = definedExternally
    val EDITABLE_TEXT: String = definedExternally
    val EDITABLE_TEXT_CONTENT: String = definedExternally
    val EDITABLE_TEXT_EDITING: String = definedExternally
    val EDITABLE_TEXT_INPUT: String = definedExternally
    val EDITABLE_TEXT_PLACEHOLDER: String = definedExternally
    val ENTITY_TITLE: String = definedExternally
    val ENTITY_TITLE_ELLIPSIZE: String = definedExternally
    val ENTITY_TITLE_HAS_SUBTITLE: String = definedExternally
    val ENTITY_TITLE_ICON_CONTAINER: String = definedExternally
    val ENTITY_TITLE_SUBTITLE: String = definedExternally
    val ENTITY_TITLE_TAGS_CONTAINER: String = definedExternally
    val ENTITY_TITLE_TEXT: String = definedExternally
    val ENTITY_TITLE_TITLE: String = definedExternally
    val ENTITY_TITLE_TITLE_AND_TAGS: String = definedExternally
    val FLEX_EXPANDER: String = definedExternally
    val HTML_SELECT: String = definedExternally
    /** @deprecated use `<HTMLSelect>` component or `Classes.HTML_SELECT` instead */
    val SELECT: String = definedExternally
    val HTML_TABLE: String = definedExternally
    val HTML_TABLE_BORDERED: String = definedExternally
    val HTML_TABLE_STRIPED: String = definedExternally
    val INPUT: String = definedExternally
    val INPUT_GHOST: String = definedExternally
    val INPUT_GROUP: String = definedExternally
    val INPUT_LEFT_CONTAINER: String = definedExternally
    val INPUT_ACTION: String = definedExternally
    val RESIZABLE_INPUT_SPAN: String = definedExternally
    val TEXT_AREA: String = definedExternally
    val TEXT_AREA_AUTO_RESIZE: String = definedExternally
    val CONTROL: String = definedExternally
    val CONTROL_INDICATOR: String = definedExternally
    val CONTROL_INDICATOR_CHILD: String = definedExternally
    val CHECKBOX: String = definedExternally
    val RADIO: String = definedExternally
    val RADIO_GROUP: String = definedExternally
    val SWITCH: String = definedExternally
    val SWITCH_INNER_TEXT: String = definedExternally
    val FILE_INPUT: String = definedExternally
    val FILE_INPUT_HAS_SELECTION: String = definedExternally
    val FILE_UPLOAD_INPUT: String = definedExternally
    val FILE_UPLOAD_INPUT_CUSTOM_TEXT: String = definedExternally
    val KEY: String = definedExternally
    val KEY_COMBO: String = definedExternally
    val MODIFIER_KEY: String = definedExternally
    val HOTKEY: String = definedExternally
    val HOTKEY_LABEL: String = definedExternally
    val HOTKEY_COLUMN: String = definedExternally
    val HOTKEY_DIALOG: String = definedExternally
    val LABEL: String = definedExternally
    val FORM_GROUP: String = definedExternally
    val FORM_CONTENT: String = definedExternally
    val FORM_HELPER_TEXT: String = definedExternally
    val FORM_GROUP_SUB_LABEL: String = definedExternally
    val MENU: String = definedExternally
    val MENU_ITEM: String = definedExternally
    val MENU_ITEM_IS_SELECTABLE: String = definedExternally
    val MENU_ITEM_SELECTED_ICON: String = definedExternally
    val MENU_ITEM_ICON: String = definedExternally
    val MENU_ITEM_LABEL: String = definedExternally
    val MENU_SUBMENU: String = definedExternally
    val MENU_SUBMENU_ICON: String = definedExternally
    val MENU_DIVIDER: String = definedExternally
    val MENU_HEADER: String = definedExternally
    val MULTISTEP_DIALOG: String = definedExternally
    val MULTISTEP_DIALOG_PANELS: String = definedExternally
    val MULTISTEP_DIALOG_LEFT_PANEL: String = definedExternally
    val MULTISTEP_DIALOG_RIGHT_PANEL: String = definedExternally
    val MULTISTEP_DIALOG_NAV_TOP: String = definedExternally
    val MULTISTEP_DIALOG_NAV_RIGHT: String = definedExternally
    val SECTION: String = definedExternally
    val SECTION_COLLAPSED: String = definedExternally
    val SECTION_HEADER: String = definedExternally
    val SECTION_HEADER_LEFT: String = definedExternally
    val SECTION_HEADER_TITLE: String = definedExternally
    val SECTION_HEADER_SUB_TITLE: String = definedExternally
    val SECTION_HEADER_DIVIDER: String = definedExternally
    val SECTION_HEADER_TABS: String = definedExternally
    val SECTION_HEADER_RIGHT: String = definedExternally
    val SECTION_CARD: String = definedExternally
    val NAVBAR: String = definedExternally
    val NAVBAR_GROUP: String = definedExternally
    val NAVBAR_HEADING: String = definedExternally
    val NAVBAR_DIVIDER: String = definedExternally
    val NON_IDEAL_STATE: String = definedExternally
    val NON_IDEAL_STATE_VISUAL: String = definedExternally
    val NON_IDEAL_STATE_TEXT: String = definedExternally
    val NUMERIC_INPUT: String = definedExternally
    val OVERFLOW_LIST: String = definedExternally
    val OVERFLOW_LIST_SPACER: String = definedExternally
    val OVERLAY: String = definedExternally
    val OVERLAY_BACKDROP: String = definedExternally
    val OVERLAY_CONTAINER: String = definedExternally
    val OVERLAY_CONTENT: String = definedExternally
    val OVERLAY_INLINE: String = definedExternally
    val OVERLAY_OPEN: String = definedExternally
    val OVERLAY_SCROLL_CONTAINER: String = definedExternally
    val OVERLAY_START_FOCUS_TRAP: String = definedExternally
    val OVERLAY_END_FOCUS_TRAP: String = definedExternally
    val PANEL_STACK: String = definedExternally
    val PANEL_STACK_HEADER: String = definedExternally
    val PANEL_STACK_HEADER_BACK: String = definedExternally
    val PANEL_STACK_VIEW: String = definedExternally
    val PANEL_STACK2: String = definedExternally
    val PANEL_STACK2_HEADER: String = definedExternally
    val PANEL_STACK2_HEADER_BACK: String = definedExternally
    val PANEL_STACK2_VIEW: String = definedExternally
    val POPOVER: String = definedExternally
    val POPOVER_ARROW: String = definedExternally
    val POPOVER_BACKDROP: String = definedExternally
    val POPOVER_CAPTURING_DISMISS: String = definedExternally
    val POPOVER_CONTENT: String = definedExternally
    val POPOVER_CONTENT_PLACEMENT: String = definedExternally
    val POPOVER_CONTENT_SIZING: String = definedExternally
    val POPOVER_DISMISS: String = definedExternally
    val POPOVER_DISMISS_OVERRIDE: String = definedExternally
    val POPOVER_MATCH_TARGET_WIDTH: String = definedExternally
    val POPOVER_OPEN: String = definedExternally
    val POPOVER_POPPER_ESCAPED: String = definedExternally
    val POPOVER_REFERENCE_HIDDEN: String = definedExternally
    val POPOVER_TARGET: String = definedExternally
    val POPOVER_TRANSITION_CONTAINER: String = definedExternally
    /** @deprecated, no longer used in Blueprint v5.x */
    val POPOVER_WRAPPER: String = definedExternally
    val PROGRESS_BAR: String = definedExternally
    val PROGRESS_METER: String = definedExternally
    val PROGRESS_NO_STRIPES: String = definedExternally
    val PROGRESS_NO_ANIMATION: String = definedExternally
    val PORTAL: String = definedExternally
    val SKELETON: String = definedExternally
    val SLIDER: String = definedExternally
    val SLIDER_AXIS: String = definedExternally
    val SLIDER_HANDLE: String = definedExternally
    val SLIDER_LABEL: String = definedExternally
    val SLIDER_TRACK: String = definedExternally
    val SLIDER_PROGRESS: String = definedExternally
    val START: String = definedExternally
    val END: String = definedExternally
    val SPINNER: String = definedExternally
    val SPINNER_ANIMATION: String = definedExternally
    val SPINNER_HEAD: String = definedExternally
    val SPINNER_NO_SPIN: String = definedExternally
    val SPINNER_TRACK: String = definedExternally
    val SEGMENTED_CONTROL: String = definedExternally
    val TAB: String = definedExternally
    val TAB_ICON: String = definedExternally
    val TAB_TAG: String = definedExternally
    val TAB_INDICATOR: String = definedExternally
    val TAB_INDICATOR_WRAPPER: String = definedExternally
    val TAB_LIST: String = definedExternally
    val TAB_PANEL: String = definedExternally
    val TABS: String = definedExternally
    val TAG: String = definedExternally
    val TAG_REMOVE: String = definedExternally
    val COMPOUND_TAG: String = definedExternally
    val COMPOUND_TAG_LEFT: String = definedExternally
    val COMPOUND_TAG_LEFT_CONTENT: String = definedExternally
    val COMPOUND_TAG_RIGHT: String = definedExternally
    val COMPOUND_TAG_RIGHT_CONTENT: String = definedExternally
    val TAG_INPUT: String = definedExternally
    val TAG_INPUT_ICON: String = definedExternally
    val TAG_INPUT_VALUES: String = definedExternally
    val TOAST: String = definedExternally
    val TOAST_CONTAINER: String = definedExternally
    val TOAST_MESSAGE: String = definedExternally
    val TOOLTIP: String = definedExternally
    val TOOLTIP_INDICATOR: String = definedExternally
    val TREE: String = definedExternally
    val TREE_NODE: String = definedExternally
    val TREE_NODE_CARET: String = definedExternally
    val TREE_NODE_CARET_CLOSED: String = definedExternally
    val TREE_NODE_CARET_NONE: String = definedExternally
    val TREE_NODE_CARET_OPEN: String = definedExternally
    val TREE_NODE_CONTENT: String = definedExternally
    val TREE_NODE_EXPANDED: String = definedExternally
    val TREE_NODE_ICON: String = definedExternally
    val TREE_NODE_LABEL: String = definedExternally
    val TREE_NODE_LIST: String = definedExternally
    val TREE_NODE_SECONDARY_LABEL: String = definedExternally
    val TREE_NODE_SELECTED: String = definedExternally
    val TREE_ROOT: String = definedExternally
    val ICON: String = definedExternally
    val ICON_STANDARD: String = definedExternally
    val ICON_LARGE: String = definedExternally
    val ICON_MUTED: String = definedExternally
    
    /**
     * Returns the namespace prefix for all Blueprint CSS classes.
     * Customize this namespace at build time by defining it with `webpack.DefinePlugin`.
     */
    fun getClassNamespace(): String;
    /** Return CSS class for alignment. */
    fun alignmentClass(alignment: Alignment?): String?
    fun elevationClass(elevation: Elevation): String
    fun elevationClass(elevation: Elevation?): String?
    /**
     * Returns CSS class for icon name.
     */
    fun iconClass(iconName: String): String
    fun iconClass(iconName: String?): String?
    /** Return CSS class for intent. */
    fun intentClass(intent: Intent): String
    fun intentClass(intent: Intent?): String?
    fun positionClass(position: Position): String
    fun positionClass(position: Position?): String?
}
